package com.tbdlab.cn1socketiotest;

import static com.codename1.ui.CN.*;
import com.codename1.io.Log;
import com.codename1.ui.BrowserComponent;
import com.codename1.ui.Button;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.util.SuccessCallback;

import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
       
        Log.p("CN1 App started");
    	
    	Form hi = new Form("Browser", new BorderLayout());
    	SocketIO socket = new SocketIO("http://192.168.8.100:3030", "{transports: ['websocket']}");
    	
    	    	
    	socket.emit("authenticate", new String[] {"{\"strategy\": \"local\", \"email\": \"test@yahoo.fr\", \"password\": \"test\"}"}, new SuccessCallback<String>() {
			public void onSucess(String value) {
				Log.p("Socket answer: "+value);
			}
		});
    	
    	BrowserComponent browser = socket.getBrowserComponent();
    	    	
    	Button b = new Button("Emit to server");
    	b.addActionListener(new ActionListener<ActionEvent>() {
			public void actionPerformed(ActionEvent evt) {
				System.out.println("Clicked");
				socket.emit("click", null, new SuccessCallback<String>() {
					public void onSucess(String value) {
						Log.p("Socket click answer: "+value);
					}
				});
			}
		});
    	//hi.add(BorderLayout.CENTER, browser);
    	hi.add(BorderLayout.SOUTH, b);
    	
    	hi.show();
    	return;
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
